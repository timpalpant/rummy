// Code generated by protoc-gen-go.
// source: deck/deck.proto
// DO NOT EDIT!

/*
Package deck is a generated protocol buffer package.

It is generated from these files:
	deck/deck.proto

It has these top-level messages:
	Card
*/
package deck

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Card_Suit int32

const (
	Card_UNKNOWN_SUIT Card_Suit = 0
	Card_HEARTS       Card_Suit = 1
	Card_DIAMONDS     Card_Suit = 2
	Card_CLUBS        Card_Suit = 3
	Card_SPADES       Card_Suit = 4
)

var Card_Suit_name = map[int32]string{
	0: "UNKNOWN_SUIT",
	1: "HEARTS",
	2: "DIAMONDS",
	3: "CLUBS",
	4: "SPADES",
}
var Card_Suit_value = map[string]int32{
	"UNKNOWN_SUIT": 0,
	"HEARTS":       1,
	"DIAMONDS":     2,
	"CLUBS":        3,
	"SPADES":       4,
}

func (x Card_Suit) String() string {
	return proto.EnumName(Card_Suit_name, int32(x))
}
func (Card_Suit) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Card_Rank int32

const (
	Card_UNKNOWN_RANK Card_Rank = 0
	Card_ACE          Card_Rank = 1
	Card_TWO          Card_Rank = 2
	Card_THREE        Card_Rank = 3
	Card_FOUR         Card_Rank = 4
	Card_FIVE         Card_Rank = 5
	Card_SIX          Card_Rank = 6
	Card_SEVEN        Card_Rank = 7
	Card_EIGHT        Card_Rank = 8
	Card_NINE         Card_Rank = 9
	Card_TEN          Card_Rank = 10
	Card_JACK         Card_Rank = 11
	Card_QUEEN        Card_Rank = 12
	Card_KING         Card_Rank = 13
)

var Card_Rank_name = map[int32]string{
	0:  "UNKNOWN_RANK",
	1:  "ACE",
	2:  "TWO",
	3:  "THREE",
	4:  "FOUR",
	5:  "FIVE",
	6:  "SIX",
	7:  "SEVEN",
	8:  "EIGHT",
	9:  "NINE",
	10: "TEN",
	11: "JACK",
	12: "QUEEN",
	13: "KING",
}
var Card_Rank_value = map[string]int32{
	"UNKNOWN_RANK": 0,
	"ACE":          1,
	"TWO":          2,
	"THREE":        3,
	"FOUR":         4,
	"FIVE":         5,
	"SIX":          6,
	"SEVEN":        7,
	"EIGHT":        8,
	"NINE":         9,
	"TEN":          10,
	"JACK":         11,
	"QUEEN":        12,
	"KING":         13,
}

func (x Card_Rank) String() string {
	return proto.EnumName(Card_Rank_name, int32(x))
}
func (Card_Rank) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Card struct {
	Suit Card_Suit `protobuf:"varint,1,opt,name=suit,enum=deck.Card_Suit" json:"suit,omitempty"`
	Rank Card_Rank `protobuf:"varint,2,opt,name=rank,enum=deck.Card_Rank" json:"rank,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Card) GetSuit() Card_Suit {
	if m != nil {
		return m.Suit
	}
	return Card_UNKNOWN_SUIT
}

func (m *Card) GetRank() Card_Rank {
	if m != nil {
		return m.Rank
	}
	return Card_UNKNOWN_RANK
}

func init() {
	proto.RegisterType((*Card)(nil), "deck.Card")
	proto.RegisterEnum("deck.Card_Suit", Card_Suit_name, Card_Suit_value)
	proto.RegisterEnum("deck.Card_Rank", Card_Rank_name, Card_Rank_value)
}

func init() { proto.RegisterFile("deck/deck.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0xff, 0xa4, 0x6e, 0x9a, 0xde, 0x3f, 0xd0, 0x2b, 0x4f, 0x1d, 0x51, 0x58, 0x98, 0x82,
	0x04, 0x4f, 0x60, 0x92, 0x4b, 0x63, 0x02, 0x0e, 0xd8, 0x49, 0xcb, 0x86, 0x0a, 0x65, 0x40, 0x95,
	0x28, 0x0a, 0xe5, 0x65, 0x78, 0x12, 0x1e, 0x0f, 0x5f, 0xb3, 0x20, 0xb1, 0x58, 0x47, 0xe7, 0x7c,
	0xfe, 0x86, 0x0b, 0xb3, 0xcd, 0xf3, 0xd3, 0xf6, 0x94, 0x9f, 0xe2, 0x6d, 0xd8, 0xed, 0x77, 0x52,
	0x70, 0xce, 0xbf, 0x62, 0x10, 0xe5, 0x7a, 0xd8, 0xc8, 0x63, 0x10, 0xef, 0x1f, 0x2f, 0xfb, 0x79,
	0x74, 0x14, 0x9d, 0x1c, 0x9e, 0xcd, 0x8a, 0x40, 0xf2, 0x52, 0x38, 0x5f, 0xdb, 0x30, 0x32, 0x34,
	0xac, 0x5f, 0xb7, 0xf3, 0xf8, 0x0f, 0x64, 0x7d, 0x6d, 0xc3, 0x98, 0x6b, 0x10, 0xfc, 0x45, 0x22,
	0x64, 0xbd, 0x69, 0x4c, 0xbb, 0x32, 0x0f, 0xae, 0xd7, 0x1d, 0xfe, 0x93, 0x00, 0x49, 0x4d, 0xca,
	0x76, 0x0e, 0x23, 0x99, 0x41, 0x5a, 0x69, 0x75, 0xd3, 0x9a, 0xca, 0x61, 0x2c, 0xa7, 0x30, 0x2e,
	0xaf, 0xfb, 0x0b, 0x87, 0x23, 0x86, 0xdc, 0xad, 0xaa, 0xc8, 0xa1, 0xc8, 0x3f, 0x23, 0x10, 0x6c,
	0xfe, 0xed, 0xb2, 0xca, 0x34, 0xde, 0x35, 0x81, 0x91, 0x2a, 0xc9, 0x8b, 0x7c, 0xe8, 0x56, 0xed,
	0x8f, 0xa3, 0xab, 0x2d, 0x91, 0x77, 0xa4, 0x20, 0x2e, 0xdb, 0xde, 0xa2, 0x08, 0x49, 0x2f, 0x09,
	0xc7, 0xcc, 0x39, 0x7d, 0x8f, 0x09, 0x73, 0x8e, 0x96, 0x64, 0x70, 0xc2, 0x91, 0xf4, 0xa2, 0xee,
	0x30, 0x65, 0xd0, 0x68, 0x43, 0x38, 0x0d, 0x42, 0xbf, 0x02, 0x57, 0x57, 0xaa, 0x6c, 0xf0, 0x3f,
	0x73, 0x77, 0x3d, 0xf9, 0x32, 0xe3, 0xb2, 0xd1, 0x66, 0x81, 0x07, 0x8f, 0x49, 0xb8, 0xe3, 0xf9,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x70, 0x7e, 0x23, 0x5a, 0x01, 0x00, 0x00,
}
